server.contextPath=/snschduler
server.port=8080

security.basic.enabled=false

#Length of Passcode to generate, default value is 8
generate.passcode.length=8

#Max pool size of Number Series, default value is 1000
sn.number.series.pool.size=1000


#DB Configuration Details
#spring.data.mongodb.uri=mongodb://reguser:RTD3pr%40g%40th!%40D3R$@10.0.0.20:30918,10.0.0.21:34815,10.0.0.22:35768/REG?replicaSet=myreplica01
spring.data.mongodb.uri=mongodb://reguser:RTD3pr%40g%40th!%40D3R$@10.0.0.20:30918,10.0.0.21:34815/REG?replicaSet=myreplica01
spring.data.mongodb.authentication-database=REG
  

#reg.service.serverUrl=https://regintegrations.epragathi.org:8443/reg/
reg.service.serverUrl=https://regappsc.epragathi.org:1205/reg/

#pr generation url
#reg.service.prgenerationurl=https://regintegrations.epragathi.org:8443/reg/master/generatePrNo
reg.service.prgenerationurl=https://regappsc.epragathi.org:1205/reg/master/generatePrNo
#############################################################
#     		  		schedulers		             			# 
#############################################################
#
#Expression format for cron expression
#  +---------------- minute (0 - 59)
 # |  +-------------- hour (0 - 23)
 # |  |  +------------ day of month (1 - 31)
 # |  |  |  +---------- month (1 - 12)
 # |  |  |  |  +-------- day of week (0 - 6) (Sunday=0 or 7)
 # |  |  |  |  |
 # *  *  *  *  *  command to be executed 

#Schedule cron expression for create/update number pool series of all offices 00:05
scheduler.bid.number.pool.update.interval=0 10 0 1/1 * ?

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.number.pool.update.isEnable=true

#Schedule cron expression for bid closing process for all series at all offices 18:00
scheduler.bid.closing.process.interval=	0 0 18 1/1 * ?

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.closing.process.isEnable=true


#Schedule cron expression to release special number if Payment status is pending 13:00
scheduler.bid.release.sn.process.interval=0 20 18 1/1 * ?

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.release.sn.process.isEnable=true

#bid register payment verify processor 13:50pm
bid.register.payment.verify.services=0 50 13 1/1 * ? 
bid.register.payment.verify.services.isEnable=true

#bid final payment verify processor 17:00pm
bid.final.payment.verify.services=0 0 17 1/1 * ?
bid.final.payment.verify.services.isEnable=true


#####################################
#		PAYU						#
#####################################

#Payment success url for redirect production
sn.ui.payment.success.url=https://aprtacitizen.epragathi.org/#!/paysuccess
sn.ui.payment.failed.url=https://aprtacitizen.epragathi.org/#!/payfailure
sn.ui.payment.pending.url=https://aprtacitizen.epragathi.org/#!/paypending


#PayU Integration properties start test---
#payment.service.success.url =https://regintegrations.epragathi.org:8443/sn/payUPaymentSuccess
#payment.service.failure.url =https://regintegrations.epragathi.org:8443/sn/payUPaymentFailed
payment.service.success.url =https://regappsc.epragathi.org:1205/sn/payUPaymentSuccess
payment.service.failure.url =https://regappsc.epragathi.org:1205/sn/payUPaymentFailed
payment.service.serviceProvider =payu_paisa
payment.service.payu.payUSalt =X5PCnadDsE
payment.service.payu.payUKey =7ROU5HLU
payment.service.payu.verify.authorization=37iLcd3DdMnQVTavmBimNpxoB5yH+nCBXnwC5Rgi0Qg=
payment.service.payu.verifyurl=https://www.payumoney.com/payment/op/getPaymentResponse
payment.service.payu.refundurl=https://www.payumoney.com/treasury/merchant/refundPayment
payment.service.payu.merchantId =5891710
payment.service.payu.payUPos =payUPos
payment.service.rta.deptCode =2603
payment.service.payu.paymenturl=https://secure.payu.in/_payment

#Start Dependencies Properties
#Addhaar
reg.service.aadhaarToken:ot2dl3adr4anjipoiu1t+alow4aqwerby65=
reg.service.aadhaarValidationUrl:https://aprtaadmin.epragathi.org:8444/aadhaar/getAadhaarDetails

#PAN
#reg.service.panValidationUrl=https://regintegrations.epragathi.org:8444/pan/getPandetails
reg.service.panValidationUrl=https://regappsc.epragathi.org:1201/pan/getPandetails
rta.pan.token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBU0xFU0hBIiwiY3JlYXRlZCI6MTUxMzY4OTk2MzMxMCwic2NvcGUiOiJERUFMRVIiLCJleHAiOjE1MTM2OTE3NjMsImp0aSI6IkFTTEVTSEEifQ.EoAYedsTQ4YkrFW8EV5OaSBnJzdxGGLJxJXPzcxipJO0nN24uebWtnpZOdBhscg84EwBCoF5ZA8-wef8ww1q_A
#Vahan
reg.service.vahanUrl=http://52.172.9.243:8080/vahan/getVahanDetails

#Hsrp
hsrp.post.tr.records.url = http://43.242.124.207/laplhsrpservice/api/HSRPRecord/postHsrpRecords
hsrp.post.pr.records.url = http://43.242.124.207/laplhsrpservice/api/PRNumber/updatePRNumber
hsrp.securitykey = Z5^q3&G6k#b%0Me@
hsrp.contenttype = application/json

#reg.service.images.new.url=https://regintegrations.epragathi.org:8443/reg/images/getApplicantImageById
reg.service.images.new.url=https://regappsc.epragathi.org:1205/reg/images/getApplicantImageById
########TAX########
reg.fresh.stateCode=AP
reg.fresh.status=Recent
reg.fresh.vehicle.age=0
reg.fresh.vehicle.amount=1000000
reg.fresh.reg.otherState=other
reg.fresh.reg.lifeTaxCode=L
reg.fresh.reg.quarterlyCode=Q
reg.fresh.reg.bothCode=B
reg.fresh.reg.seatingCapacityCode=S
reg.fresh.reg.ulwCode=U
reg.fresh.reg.rlwCode=G
reg.fresh.reg.battery=battery
reg.fresh.reg.electric=ELECTRIC
reg.fresh.permitcode=INA

sbi.key.location=APT_GOVT.key



script.engine.location=flowscript//FlowScript.js
script.engine.name=nashron

#Second Vehicle Search
#reg.service.secondVehicleSearchUrl=https://regintegrations.epragathi.org:8444/svsearch/getSecondVehicleList
reg.service.secondVehicleSearchUrl=https://regappsc.epragathi.org:1201/svsearch/getSecondVehicleList

#Engine ChassisNo Validation
#reg.service.engineChassisNovalidationUrl=https://regintegrations.epragathi.org:8444/ecv/engineChassisNoValidation
reg.service.engineChassisNovalidationUrl=https://regappsc.epragathi.org:1201/ecv/engineChassisNoValidation

#records 
no.of.records.assign=1

#Cfst Vcr Details Url
#reg.service.vcrDetailsFromCfstUrl=https://regintegrations.epragathi.org:8444/cfstvcr/getVcrDetails
reg.service.vcrDetailsFromCfstUrl=https://regappsc.epragathi.org:1201/cfstvcr/getVcrDetails

#############################################################
#     				Communication Configuration  			# 
#############################################################

sms.host=msdgweb.mgov.gov.in/esms/sendsmsrequest
sms.password=APCFST@123
sms.username=APTD-RSRV
sms.senderid=APTDMG

email.host=smtp.gmail.com
email.port=465
email.userName=support@aptransport.org
email.from=support
email.password=laserjet


notification.sms.queue=QUEUE.IN.sms
notification.email.queue=QUEUE.IN.email

#activemq.broker-url=tcp://10.0.0.19:61616
activemq.broker-url=tcp://10.0.0.15:61616

#payment
#Make it as true and uncomment below isInTestPayment for the payment test payment with amount = 0  
isInTestPayment=false
sbi.key.location=APT_GOVT.key

# HSRP Configuration
hsrp.post.tr.records.url = https://www.hsrpap.com/aprtdhsrponline/api/HSRPRecord/postHsrpRecords
hsrp.post.pr.records.url = https://www.hsrpap.com/aprtdhsrponline/api/PRNumber/updatePRNumber
hsrp.contenttype = application/json
hsrp.securitykey = M8@!a5q*F2e#^D0W

#Schedule cron expression for hsrp
scheduler.hsrp.failure  = 0 0 5 * * *

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.hsrp.failure.isEnable=false

#CreditAccounts
rta.hoa.creditAccount=35988354730
cess.hoa.creditAccount=37773777052
hsrp.hoa.creditAccount=62410583711
lifeTax.headOfAccount=0041001020004000000NVN
qtlyTax.headOfAccount=0041001020003000000NVN

#Cfst Sync Url
#reg.service.cfstSyncUrl=https://regintegrations.epragathi.org:8444/cfstSync/saveSyncData
reg.service.cfstSyncUrl=https://regappsc.epragathi.org:1201/cfstSync/saveSyncData


#Schedule cron expression for cfst sync
scheduler.cfst.sync.process.interval=  0 */5 * ? * * 
#Scheduler accepts (true/false). If value is not found, it will be considered as false
scheduler.cfst.sync.process.isEnable=true

#Registration Payments Details for CFST
cfst.service.authenticationToken = AojfkdjfkRjshjhsjhsjJdsdhsgshfgUsdsakjfhjN===


#Encryption-Decryption keySets
encryption.secret.key =ssdkF$HUy2A#D%kd
decryption.secret.key =weJiSEvR5yAC5ftB
ips=61.12.111.80,220.225.217.229,182.73.224.148

isTestSchedulers=false

#fileUploadDirectory for Excel in Financier
file.upload-dir=/var/upload/
spring.servlet.multipart.enabled=true

#Default  PASSWORD for user
user.default.pwd=APrta@123


# External User Secret Key
extUser.secret.key=prodsarJunhdgshfAsgshgf$%$@$78555
extUser.expiration=300000

#It will userd to identyfy to check curent JVM is common services war or not
reg.dealer.prGeneration.url.isSameServer=true

pr.generation.scheduler=0 0 18 1/1 * ?
pr.generation.scheduler.isEnable=true

# auto action for reg services
auto.action.reg.services.scheduler=0 0/30 20 1/1 * ?
auto.action.reg.services.scheduler.isEnable=true


# auto action for new reg 
auto.action.new.reg.scheduler=0 0/30 20 1/1 * ?
auto.action.new.reg.scheduler.isEnable=true
#RegistrationCount scheduler
#Everyday at 1AM
registration.count.scheduler = 0 0 1 1/1 * ? 
registration.count.scheduler.isEnable=true